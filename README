The ReST Spreadsheet application is designed to allow access to the data within a 
spreadsheet via a ReST api, using a light weight simple implementation of node.js. 

This application gets basic web server functionality from https://gist.github.com/246761 
a big thanks for sharing.

This shows the front middle back architecture pattern. 
The front is represented by the html pages, the middle is represented by the 
rest_spreadsheet.js file (this is the node.js file) the back is represented by 
the spreadsheet.

The Middle tier code was developed using server side javascript following the MVC 
pattern. 
Additional to the HTML front end a front end was developed using a google doc 
spreadsheet to show how visualisations can be achieved using the data. 

Hopefully what this demonstrates is that multiple consumers can be developed based 
on the same ReST Api. These can be across many devices, operating systems and 
applications (e.g. An iOS/Android application, a spreadsheet or a HTML5 webpage). 
Although the specific data used here might have a limited appeal, the power of 
presenting corporate data ReST(fully) gives the user the ultimate choice about 
how they wish to consume that data.

Supporting information
========================
* Installation for node.js http://nodejs.org/
* White paper on Front Middle Back https://docs.google.com/a/routetodigital.com/viewer?a=v&pid=explorer&chrome=true&srcid=0B0nl0PiKHURCYTlkZjJlN2ItMzIwOC00N2ZjLThmYTEtMTNmZDZkM2FkM2E3&hl=en
* Collaboration on Middle API https://docs.google.com/a/routetodigital.com/document/d/1g9Dxf_p-Z9f-ARnpYMPLMLGzQLbWsrJYdT1EuC4C1dM/edit?hl=en_US
* Development code,issues  and documents https://github.com/atosorigin/rest_spreadsheet/wiki
* Incident API Spreadsheet https://docs.google.com/a/routetodigital.com/document/d/1g9Dxf_p-Z9f-ARnpYMPLMLGzQLbWsrJYdT1EuC4C1dM/edit?hl=en_US

TODO
=============
* paging
* make it generic for all spreadsheets
